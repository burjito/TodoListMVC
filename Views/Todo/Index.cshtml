@model List<TodoListMVC.Models.TodoItem>
@using TodoListMVC.Models
@{
    ViewData["Title"] = "Task List";
    var currentSort = ViewData["CurrentSort"] as string ?? "";
    var categories = ViewData["Categories"] as List<Category> ?? new List<Category>();

    var selectedCategory = Context.Request.Query["category"].ToString();
    var selectedPriority = Context.Request.Query["priority"].ToString();
    var selectedStatus = Context.Request.Query["status"].ToString();
    var showHidden = Context.Request.Query["showHidden"].ToString() == "true";
}

<div class="container mt-4">
    <h2 class="mb-3">To-Do List</h2>

    <form method="get" class="row g-3 align-items-center mb-3">
        <div class="col-md-2">
            <select name="category" class="form-select form-select-sm">
                <option value="" selected="@(string.IsNullOrEmpty(selectedCategory) ? "selected" : null)">All Categories</option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.Id" selected="@(selectedCategory == cat.Id.ToString() ? "selected" : null)">@cat.Name</option>
                }
            </select>
        </div>

        <div class="col-md-2">
            <select name="priority" class="form-select form-select-sm">
                <option value="" selected="@(string.IsNullOrEmpty(selectedPriority) ? "selected" : null)">All Priorities</option>
                <option value="Low" selected="@(selectedPriority == "Low" ? "selected" : null)">Low</option>
                <option value="Medium" selected="@(selectedPriority == "Medium" ? "selected" : null)">Medium</option>
                <option value="High" selected="@(selectedPriority == "High" ? "selected" : null)">High</option>
            </select>
        </div>

        <div class="col-md-2">
            <select name="status" class="form-select form-select-sm">
                <option value="" selected="@(string.IsNullOrEmpty(selectedStatus) ? "selected" : null)">All Status</option>
                <option value="Pending" selected="@(selectedStatus == "Pending" ? "selected" : null)">Pending</option>
                <option value="Done" selected="@(selectedStatus == "Done" ? "selected" : null)">Done</option>
            </select>
        </div>

        <div class="col-md-2">
            <select name="sortOrder" class="form-select form-select-sm">
                <option value="" selected="@(string.IsNullOrEmpty(currentSort) ? "selected" : null)">Sort by ID Asc</option>
                <option value="title_asc" selected="@(currentSort == "title_asc" ? "selected" : null)">Title Asc</option>
                <option value="title_desc" selected="@(currentSort == "title_desc" ? "selected" : null)">Title Desc</option>
                <option value="priority_asc" selected="@(currentSort == "priority_asc" ? "selected" : null)">Priority Asc</option>
                <option value="priority_desc" selected="@(currentSort == "priority_desc" ? "selected" : null)">Priority Desc</option>
            </select>
        </div>

        <div class="col-md-3 d-flex gap-2 align-items-center">
            <input type="hidden" name="showHidden" value="@showHidden" />
            <button type="submit" class="btn btn-primary btn-sm">Apply Filters</button>
            
            <a asp-action="Index"
               asp-route-category="@selectedCategory"
               asp-route-priority="@selectedPriority"
               asp-route-status="@selectedStatus"
               asp-route-sortOrder="@currentSort"
               asp-route-showHidden="@(showHidden ? "false" : "true")"
               class="btn btn-@(showHidden ? "secondary active" : "outline-secondary") btn-sm"
               style="color:@(showHidden ? "white" : ""); background-color:@(showHidden ? "gray" : ""); border-color:gray;">
                @(showHidden ? "Hide Hidden Items" : "Show Hidden Items")
            </a>
        </div>

        <div class="col-md d-flex justify-content-end align-items-center"> 
            <a asp-action="Create" class="btn btn-success btn-sm">Add Task</a>
        </div>
    </form>

    <table class="table table-bordered table-hover align-middle">
        <thead class="table-dark">
            <tr>
                <th style="width:36%;">Title</th>
                <th style="width:13%;">Category</th>
                <th style="width:13%;">Priority</th>
                <th style="width:13%;">Status</th>
                <th style="width:25%;">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                if (item.IsHidden && !showHidden)
                {
                    continue;
                }

                string statusClass = item.Status switch
                {
                    Status.Pending => "badge bg-warning text-dark",
                    Status.Done => "badge bg-success",
                    _ => "badge bg-secondary"
                };

                <tr>
                    <td>@item.Title</td>
                    <td>@item.Category?.Name</td>
                    <td>@item.Priority</td>
                    <td><span class="@statusClass">@item.Status</span></td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm me-1">View</a>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm me-1">Edit</a>

                        <form asp-action="ToggleHide" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@item.Id" />
                            <input type="hidden" name="showHidden" value="@showHidden" />
                            <button type="submit" class="btn btn-secondary btn-sm me-1">
                                @(item.IsHidden ? "Unhide" : "Hide")
                            </button>
                        </form>

                        <form asp-action="Delete" method="post" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this task?');">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@item.Id" />
                            <button type="submit" class="btn btn-danger btn-sm me-1">Delete</button>
                        </form>

                        @if (item.Status != Status.Done)
                        {
                            <form asp-action="MarkAsDone" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@item.Id" />
                                <button type="submit" class="btn btn-success btn-sm">Done</button>
                            </form>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>